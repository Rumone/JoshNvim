local lspFunctions = require("plugins.lsp.functions")
local lsp_servers = require("configs.lsp-server")
local null_ls_servers = require("configs.null-ls-servers")

return {
	{
		{
			"williamboman/mason.nvim",
			opts = {
				ui = {
					height = 0.8,
					icons = {
						package_installed = "✓",
						package_pending = "➜",
						package_uninstalled = "✗",
					},
				},
			},
		},
		{
			"williamboman/mason-lspconfig.nvim",
			dependencies = {
				"SmiteshP/nvim-navic",
			},
			config = function()
				-- nvim-cmp supports additional completion capabilities, so broadcast that to servers
				local capabilities = vim.lsp.protocol.make_client_capabilities()
				capabilities = require("cmp_nvim_lsp").default_capabilities(capabilities)

				local mason_lspconfig = require("mason-lspconfig")

				mason_lspconfig.setup({
					ensure_installed = vim.tbl_keys(lsp_servers),
					automatic_installation = true,
				})

				mason_lspconfig.setup_handlers({
					function(server_name)
						require("lspconfig")[server_name].setup({
							capabilities = capabilities,
							on_attach = lspFunctions.on_attach,
							settings = lsp_servers[server_name],
						})
					end,
				})
			end,
		},

		{
			"jose-elias-alvarez/null-ls.nvim",
			opts = {
				sources = 
			}
		},

		{
			"jayp0521/mason-null-ls.nvim",
			dependencies = {
				"jose-elias-alvarez/null-ls.nvim",
			},
			config = function()
				local mason_null_ls = require("mason-null-ls")

				mason_null_ls.setup({
					ensure_installed = null_ls_servers,
					automatic_installation = true,
					automatic_setup = true
				})
			end,
		},
		{
			-- LSP Configuration & Plugins
			"neovim/nvim-lspconfig",
			dependencies = {
				-- Automatically install LSPs to stdpath for neovim
				"williamboman/mason.nvim",
				"williamboman/mason-lspconfig.nvim",

				-- Useful status updates for LSP
				"j-hui/fidget.nvim",
				-- Additional lua configuration, makes nvim stuff amazing
				"folke/neodev.nvim",
			},
		}
	},
}
